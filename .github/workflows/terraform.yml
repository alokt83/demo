name: Terraform CI/CD Pipeline

# Trigger the workflow on push to main or pull request
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest  # Runner type (use `ubuntu-latest` for Linux)

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up AWS credentials using secrets
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # GitHub secret for AWS Access Key ID
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # GitHub secret for AWS Secret Access Key
          aws-region: us-east-1  # AWS region where your resources will be deployed

      # Step 3: Install Terraform (optional, depending on runner availability)
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.0  # Use the required Terraform version

      # Step 4: Initialize Terraform (download necessary providers and modules)
      - name: Terraform Init
        run: terraform init

      # Step 5: Run Terraform Plan (shows the changes Terraform will make)
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Step 6: Apply Terraform Plan (apply the changes to AWS)
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan  # Automatically approves the changes
